-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module BigStructure.Object.Design exposing (..)

import BigStructure.InputObject
import BigStructure.Interface
import BigStructure.Object
import BigStructure.Scalar
import BigStructure.ScalarCodecs
import BigStructure.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


id : SelectionSet BigStructure.ScalarCodecs.Id BigStructure.Object.Design
id =
    Object.selectionForField "ScalarCodecs.Id" "id" [] (BigStructure.ScalarCodecs.codecs |> BigStructure.Scalar.unwrapCodecs |> .codecId |> .decoder)


composition : SelectionSet String BigStructure.Object.Design
composition =
    Object.selectionForField "String" "composition" [] Decode.string


torsionAngles : SelectionSet String BigStructure.Object.Design
torsionAngles =
    Object.selectionForField "String" "torsionAngles" [] Decode.string


hydrophobicFitness : SelectionSet (Maybe Float) BigStructure.Object.Design
hydrophobicFitness =
    Object.selectionForField "(Maybe Float)" "hydrophobicFitness" [] (Decode.float |> Decode.nullable)


isProteinOnly : SelectionSet Bool BigStructure.Object.Design
isProteinOnly =
    Object.selectionForField "Bool" "isProteinOnly" [] Decode.bool


isoelectricPoint : SelectionSet Float BigStructure.Object.Design
isoelectricPoint =
    Object.selectionForField "Float" "isoelectricPoint" [] Decode.float


numOfResidues : SelectionSet Int BigStructure.Object.Design
numOfResidues =
    Object.selectionForField "Int" "numOfResidues" [] Decode.int


mass : SelectionSet Float BigStructure.Object.Design
mass =
    Object.selectionForField "Float" "mass" [] Decode.float


meanPackingDensity : SelectionSet Float BigStructure.Object.Design
meanPackingDensity =
    Object.selectionForField "Float" "meanPackingDensity" [] Decode.float


chains : SelectionSet decodesTo BigStructure.Object.DesignChain -> SelectionSet (Maybe (List (Maybe decodesTo))) BigStructure.Object.Design
chains object_ =
    Object.selectionForCompositeField "chains" [] object_ (identity >> Decode.nullable >> Decode.list >> Decode.nullable)
